{"mappings":"AAAA,MAAM,SAAS;AAEf,qBAAqB;AACrB,SAAS;IACP,MAAM,QACH,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS,eAAe,OAC9B,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,+KAAmC;AACrE;AAEA,kCAAkC;AAClC,SAAS,eAAe,QAAQ;IAC9B,SAAS,aAAa,CAAC,yBAAyB,SAAS,GAAG,SACzD,GAAG,CACF,CAAC,IAAM,CAAC;;UAEJ,EAAE,EAAE,EAAE,CAAC;UACP,EAAE,EAAE,IAAI,CAAC;UACT,EAAE,EAAE,GAAG,CAAC;UACR,EAAE,EAAE,MAAM,CAAC;UACX,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;UACtB,EAAE,EAAE,KAAK,CAAC;UACV,EAAE,EAAE,UAAU,GAAG,uBAAQ,eAAK;;uCAED,EAAE,EAAE,EAAE,CAAC;AAAoB,uCAC3B,EAAE,EAAE,EAAE,CAAC;AAAqB;AACxD;AACH,EACN,CAAC,EAEE,IAAI,CAAC;AACV;AAEA,yBAAyB;AACzB,SAAS,WAAW,CAAC;IACnB,EAAE,cAAc;IAEhB,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,MAAM,UAAU;QACd,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK;QACpB,QAAQ,KAAK,MAAM,CAAC,KAAK;QACzB,QAAQ,KAAK,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;QACtD,OAAO,KAAK,KAAK,CAAC,KAAK;QACvB,YAAY,KAAK,UAAU,CAAC,OAAO;IACrC;IAEA,MAAM,QAAQ;QACZ,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB,GACG,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC;QACJ;QACA,KAAK,KAAK;IACZ,GACC,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,sGAAsB;AACxD;AAEA,mBAAmB;AACnB,SAAS,cAAc,EAAE;IACvB,MAAM,UAAU,OAAO;IACvB,IAAI,CAAC,SAAS;IAEd,MAAM,GAAG,OAAO,CAAC,EAAE,IAAI,EAAE;QACvB,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE,MAAM;QAAQ;IACvC,GACG,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,IAAM,eACX,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,sGAAsB;AACxD;AAEA,oBAAoB;AACpB,SAAS,cAAc,EAAE;IACvB,IAAI,CAAC,QAAQ,uPAAoD;IAEjE,MAAM,GAAG,OAAO,CAAC,EAAE,IAAI,EAAE;QACvB,QAAQ;IACV,GACG,IAAI,CAAC,IAAM,eACX,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,sGAAsB;AACxD;AAEA,gBAAgB;AAChB,SACG,aAAa,CAAC,qBACd,gBAAgB,CAAC,SAAS;AAC7B,SACG,aAAa,CAAC,qBACd,gBAAgB,CAAC,UAAU","sources":["src/index.js"],"sourcesContent":["const apiUrl = \"http://localhost:3000/students\";\r\n\r\n// Отримати студентів\r\nfunction getStudents() {\r\n  fetch(apiUrl)\r\n    .then((res) => res.json())\r\n    .then((data) => renderStudents(data))\r\n    .catch((err) => console.error(\"Помилка завантаження студентів:\", err));\r\n}\r\n\r\n// Відобразити студентів у таблиці\r\nfunction renderStudents(students) {\r\n  document.querySelector(\"#students-table tbody\").innerHTML = students\r\n    .map(\r\n      (s) => `\r\n    <tr>\r\n      <td>${s.id}</td>\r\n      <td>${s.name}</td>\r\n      <td>${s.age}</td>\r\n      <td>${s.course}</td>\r\n      <td>${s.skills.join(\", \")}</td>\r\n      <td>${s.email}</td>\r\n      <td>${s.isEnrolled ? \"Так\" : \"Ні\"}</td>\r\n      <td>\r\n        <button onclick=\"updateStudent(${s.id})\">Оновити</button>\r\n        <button onclick=\"deleteStudent(${s.id})\">Видалити</button>\r\n      </td>\r\n    </tr>\r\n  `\r\n    )\r\n    .join(\"\");\r\n}\r\n\r\n// Додати нового студента\r\nfunction addStudent(e) {\r\n  e.preventDefault();\r\n\r\n  const form = document.querySelector(\"#add-student-form\");\r\n  const student = {\r\n    name: form.name.value,\r\n    age: +form.age.value,\r\n    course: form.course.value,\r\n    skills: form.skills.value.split(\",\").map((s) => s.trim()),\r\n    email: form.email.value,\r\n    isEnrolled: form.isEnrolled.checked,\r\n  };\r\n\r\n  fetch(apiUrl, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(student),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(() => {\r\n      getStudents();\r\n      form.reset();\r\n    })\r\n    .catch((err) => console.error(\"Помилка додавання:\", err));\r\n}\r\n\r\n// Оновити студента\r\nfunction updateStudent(id) {\r\n  const newName = prompt(\"Введіть нове ім’я студента:\");\r\n  if (!newName) return;\r\n\r\n  fetch(`${apiUrl}/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name: newName }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка оновлення:\", err));\r\n}\r\n\r\n// Видалити студента\r\nfunction deleteStudent(id) {\r\n  if (!confirm(\"Ви впевнені, що хочете видалити цього студента?\")) return;\r\n\r\n  fetch(`${apiUrl}/${id}`, {\r\n    method: \"DELETE\",\r\n  })\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка видалення:\", err));\r\n}\r\n\r\n// Обробка подій\r\ndocument\r\n  .querySelector(\"#get-students-btn\")\r\n  .addEventListener(\"click\", getStudents);\r\ndocument\r\n  .querySelector(\"#add-student-form\")\r\n  .addEventListener(\"submit\", addStudent);\r\n"],"names":[],"version":3,"file":"frontend4-hw18js.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}