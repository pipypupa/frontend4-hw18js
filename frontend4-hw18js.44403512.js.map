{"mappings":"ACAA,IAAM,OAAS,iCAGf,SAAS,cACP,MAAM,QACH,IAAI,CAAC,AAAC,GAAQ,EAAI,IAAI,IACtB,IAAI,CAAC,AAAC,GAAS,eAAe,IAC9B,KAAK,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,kCAAmC,GACrE,CAGA,SAAS,eAAe,CAAQ,EAC9B,SAAS,aAAa,CAAC,yBAAyB,SAAS,CAAG,EACzD,GAAG,CACF,AAAC,GAAM;A;AAEH,UAAA,EAAE,EAAE,EAAE,CAAC;AACP,UAAA,EAAE,EAAE,IAAI,CAAC;AACT,UAAA,EAAE,EAAE,GAAG,CAAC;AACR,UAAA,EAAE,EAAE,MAAM,CAAC;AACX,UAAA,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;AACtB,UAAA,EAAE,EAAE,KAAK,CAAC;AACV,UAAA,EAAE,EAAE,UAAU,CAAG,MAAQ,KAAK;A;AAED,uCAAA,EAAE,EAAE,EAAE,CAAC;AAAoB,uCAC3B,EAAE,EAAE,EAAE,CAAC;AAAqB;AACxD;AACH,EACN,CAAC,EAEE,IAAI,CAAC,GACV,CAGA,SAAS,WAAW,CAAC,EACnB,EAAE,cAAc,GAEhB,IAAM,EAAO,SAAS,aAAa,CAAC,qBAUpC,MAAM,OAAQ,CACZ,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAZN,CACd,KAAM,EAAK,IAAI,CAAC,KAAK,CACrB,IAAK,CAAC,EAAK,GAAG,CAAC,KAAK,CACpB,OAAQ,EAAK,MAAM,CAAC,KAAK,CACzB,OAAQ,EAAK,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,AAAC,GAAM,EAAE,IAAI,IACtD,MAAO,EAAK,KAAK,CAAC,KAAK,CACvB,WAAY,EAAK,UAAU,CAAC,OAAO,AACrC,EAMA,GACG,IAAI,CAAC,AAAC,GAAQ,EAAI,IAAI,IACtB,IAAI,CAAC,KACJ,cACA,EAAK,KAAK,EACZ,GACC,KAAK,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,qBAAsB,GACxD,CAGA,SAAS,cAAc,CAAE,EACvB,IAAM,EAAU,OAAO,+BAClB,GAEL,MAAM,CAAA,EAAG,OAAO,CAAC,EAAE,EAAA,CAAI,CAAE,CACvB,OAAQ,QACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,CAAE,KAAM,CAAQ,EACvC,GACG,IAAI,CAAC,AAAC,GAAQ,EAAI,IAAI,IACtB,IAAI,CAAC,IAAM,eACX,KAAK,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,qBAAsB,GACxD,CAGA,SAAS,cAAc,CAAE,EAClB,QAAQ,oDAEb,MAAM,CAAA,EAAG,OAAO,CAAC,EAAE,EAAA,CAAI,CAAE,CACvB,OAAQ,QACV,GACG,IAAI,CAAC,IAAM,eACX,KAAK,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,qBAAsB,GACxD,CAGA,SACG,aAAa,CAAC,qBACd,gBAAgB,CAAC,QAAS,aAC7B,SACG,aAAa,CAAC,qBACd,gBAAgB,CAAC,SAAU","sources":["<anon>","src/index.js"],"sourcesContent":["const apiUrl = \"http://localhost:3000/students\";\n// Отримати студентів\nfunction getStudents() {\n    fetch(apiUrl).then((res)=>res.json()).then((data)=>renderStudents(data)).catch((err)=>console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0456\\u0432:\", err));\n}\n// Відобразити студентів у таблиці\nfunction renderStudents(students) {\n    document.querySelector(\"#students-table tbody\").innerHTML = students.map((s)=>`\n    <tr>\n      <td>${s.id}</td>\n      <td>${s.name}</td>\n      <td>${s.age}</td>\n      <td>${s.course}</td>\n      <td>${s.skills.join(\", \")}</td>\n      <td>${s.email}</td>\n      <td>${s.isEnrolled ? \"\\u0422\\u0430\\u043A\" : \"\\u041D\\u0456\"}</td>\n      <td>\n        <button onclick=\"updateStudent(${s.id})\">\\u{41E}\\u{43D}\\u{43E}\\u{432}\\u{438}\\u{442}\\u{438}</button>\n        <button onclick=\"deleteStudent(${s.id})\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n      </td>\n    </tr>\n  `).join(\"\");\n}\n// Додати нового студента\nfunction addStudent(e) {\n    e.preventDefault();\n    const form = document.querySelector(\"#add-student-form\");\n    const student = {\n        name: form.name.value,\n        age: +form.age.value,\n        course: form.course.value,\n        skills: form.skills.value.split(\",\").map((s)=>s.trim()),\n        email: form.email.value,\n        isEnrolled: form.isEnrolled.checked\n    };\n    fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(student)\n    }).then((res)=>res.json()).then(()=>{\n        getStudents();\n        form.reset();\n    }).catch((err)=>console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0434\\u043E\\u0434\\u0430\\u0432\\u0430\\u043D\\u043D\\u044F:\", err));\n}\n// Оновити студента\nfunction updateStudent(id) {\n    const newName = prompt(\"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043D\\u043E\\u0432\\u0435 \\u0456\\u043C\\u2019\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430:\");\n    if (!newName) return;\n    fetch(`${apiUrl}/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: newName\n        })\n    }).then((res)=>res.json()).then(()=>getStudents()).catch((err)=>console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u043E\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F:\", err));\n}\n// Видалити студента\nfunction deleteStudent(id) {\n    if (!confirm(\"\\u0412\\u0438 \\u0432\\u043F\\u0435\\u0432\\u043D\\u0435\\u043D\\u0456, \\u0449\\u043E \\u0445\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0446\\u044C\\u043E\\u0433\\u043E \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430?\")) return;\n    fetch(`${apiUrl}/${id}`, {\n        method: \"DELETE\"\n    }).then(()=>getStudents()).catch((err)=>console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u043D\\u044F:\", err));\n}\n// Обробка подій\ndocument.querySelector(\"#get-students-btn\").addEventListener(\"click\", getStudents);\ndocument.querySelector(\"#add-student-form\").addEventListener(\"submit\", addStudent);\n\n//# sourceMappingURL=frontend4-hw18js.44403512.js.map\n","const apiUrl = \"http://localhost:3000/students\";\r\n\r\n// Отримати студентів\r\nfunction getStudents() {\r\n  fetch(apiUrl)\r\n    .then((res) => res.json())\r\n    .then((data) => renderStudents(data))\r\n    .catch((err) => console.error(\"Помилка завантаження студентів:\", err));\r\n}\r\n\r\n// Відобразити студентів у таблиці\r\nfunction renderStudents(students) {\r\n  document.querySelector(\"#students-table tbody\").innerHTML = students\r\n    .map(\r\n      (s) => `\r\n    <tr>\r\n      <td>${s.id}</td>\r\n      <td>${s.name}</td>\r\n      <td>${s.age}</td>\r\n      <td>${s.course}</td>\r\n      <td>${s.skills.join(\", \")}</td>\r\n      <td>${s.email}</td>\r\n      <td>${s.isEnrolled ? \"Так\" : \"Ні\"}</td>\r\n      <td>\r\n        <button onclick=\"updateStudent(${s.id})\">Оновити</button>\r\n        <button onclick=\"deleteStudent(${s.id})\">Видалити</button>\r\n      </td>\r\n    </tr>\r\n  `\r\n    )\r\n    .join(\"\");\r\n}\r\n\r\n// Додати нового студента\r\nfunction addStudent(e) {\r\n  e.preventDefault();\r\n\r\n  const form = document.querySelector(\"#add-student-form\");\r\n  const student = {\r\n    name: form.name.value,\r\n    age: +form.age.value,\r\n    course: form.course.value,\r\n    skills: form.skills.value.split(\",\").map((s) => s.trim()),\r\n    email: form.email.value,\r\n    isEnrolled: form.isEnrolled.checked,\r\n  };\r\n\r\n  fetch(apiUrl, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(student),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(() => {\r\n      getStudents();\r\n      form.reset();\r\n    })\r\n    .catch((err) => console.error(\"Помилка додавання:\", err));\r\n}\r\n\r\n// Оновити студента\r\nfunction updateStudent(id) {\r\n  const newName = prompt(\"Введіть нове ім’я студента:\");\r\n  if (!newName) return;\r\n\r\n  fetch(`${apiUrl}/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name: newName }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка оновлення:\", err));\r\n}\r\n\r\n// Видалити студента\r\nfunction deleteStudent(id) {\r\n  if (!confirm(\"Ви впевнені, що хочете видалити цього студента?\")) return;\r\n\r\n  fetch(`${apiUrl}/${id}`, {\r\n    method: \"DELETE\",\r\n  })\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка видалення:\", err));\r\n}\r\n\r\n// Обробка подій\r\ndocument\r\n  .querySelector(\"#get-students-btn\")\r\n  .addEventListener(\"click\", getStudents);\r\ndocument\r\n  .querySelector(\"#add-student-form\")\r\n  .addEventListener(\"submit\", addStudent);\r\n"],"names":["apiUrl","getStudents","fetch","then","res","json","data","renderStudents","catch","err","console","error","students","document","querySelector","innerHTML","map","s","id","name","age","course","skills","join","email","isEnrolled","addStudent","e","preventDefault","form","method","headers","body","JSON","stringify","value","split","trim","checked","reset","updateStudent","newName","prompt","deleteStudent","confirm","addEventListener"],"version":3,"file":"frontend4-hw18js.44403512.js.map"}